Mouse event types related to the mouse
*************
click > The event occurs ehrn the user clicks on an element (presses a button and releases it)

dbclick > the event occurs when the user double-clicks on an element

mousedown > The event occurs when a user presses a mouse button

mouseup > The event occurs when a user releases a mouse button over an element

mousemove > The event occurs when the pointer is moving while it is over an element

mouseenter > The event occurs when the pointer is moved onto an element

mouseleave > The event occurs the pointer is moved out of an element

mouseover > The event occurs when the pointer is moved onto an element, or onto one of its children

contextmenu > The event occurs when the user right-clicks on an element to open a context menu

**********************
Mouse event properties
**********************
button > returns mouse button was pressed when the mouse event was triggered

clientX and clientY > Returns the coordinates of the mouse pointer, relative to the element 
			coordinates system that triggered the event. 

pageX and pageY > Returns of the mouse pointer, relative to the document, when the mouse event was triggered.
			
screenX and screenY > Returns the coordinates of the mouse pointer, relative to the screen, when an event was triggered.

altKey,
ctrlKey, > Returns wheteher the 'alt, ctrl, shift' key was pressed when an evetn was triggered
shiftKey

detail > Returns a number that indicates how many times the mouse was clicked.



*****************************
Forms and input fields events
*****************************

input > The event occurs when an element gets user input (e.g., a key is typed on an input field, a slider is moved, etc.)

change > The event occurs when the content of a form element, the selection, or the checked state have changed 
	(for <input>, <select>, and <textarea>). A change event listener on a slider will generate an event when 
	the drag/move ends, while input events will be useful to do something as the slider is being moved.

focus > The event occurs when an element gets focus (e.g., the user clicks in an input field)

blur > The event occurs when an element loses focus (e.g., the user clicks on another element)

select > The event occurs after the user selects some text (for <input> and <textarea>)

submit > The event occurs when a form is submitted


***********************
How to listen to events
***********************
Method 1: declare an evetn handler in the HTML code
*********
<div id="someDiv" onclick="alert('clicked!')">content of the div</div>

Method 2: attach an event handler to an HTML element in JavaScript
*********
not be able to attach multiple listener functions

document.getElementById('someDiv').onclick = function(){
	alert('clicked!');
}

Method 3: register a callback to the event listener with the addEventListener method (preferred method)
*********
the third parameter describes whether the callback has to be called during the captured phase

document.getElementById('someDiv').addEventListener('click', function(){
	alert('clicked!');
}, false);



************
Event object
************
type > returns the name of the event
target > returns element that triggered the event

Most useful common methods

preventDefault() > Cancels the event if it is cancelable, meaning that the defalt actioin that belongs to the event wiil not occur
stopPropagation() > Prevents further propagation of an event during event flow


*******************************
Event types related to keyboard
*******************************
keydown > the event occurs when the user is pressing a key

keyup > The event occurs when the user releases a key

keypress > The event occurs when the user presses a key (up and release)

*************************
Keyboard event properties
*************************
keyCode > Returns the unicode character code of the key that triggered the onkeypress, onkeydown or onkeyup event

shiftKey > retunrs whether the "shift" key was pressed when the key event was triggered

ctrlKey > Returns whether the "ctrl" key was pressed when the key event was triggered

altKey > Returns whether the "alt" key was pressed when the key event was triggered

****************************
Event types related to MOUSE
****************************
click > The event occurs when the user clicks on an element (presses a button and releases it)

dblclick > The event occurs when the user double-clicks on an element

mousedown > The event occurs when the user presses a key (up and release)

mouseup	> The event occurs when a user releases a mouse button over an element

mousemove >The event occurs when the pointer is moving while it is over an element

mouseenter > The event occurs when the pointer is moved onto an element

mouseleave > The event occurs when the pointer is moved out of an element

mouseover > The event occurs when the pointer is moved onto an element, or onto one of its children

contextmenu > The event occurs when the user right-clicks on an element to open a context menu 

**********************
Mouse event properties
**********************
button > Returns which mouse button was pressed when the mouse event was triggered

clientX and clientY > Returns the coordinates of the mouse pointer, relative to the element coordinate system that triggered the event

pageX and pageY > Returns the coordinates of the mouse pointer, relative to the document, when the mouse event was triggered

screenX and screenY > Returns the coordinates of the mouse pointer, relative to the screen, when an event was triggered

altKey, ctrlKey, shiftKey > Returns whether the "alt, ctrl and shift" key was pressed when an event was triggered

detail > Returns a number that indicates how many times the mouse was clicked





















			